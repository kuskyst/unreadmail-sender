{"files":[{"id":"fbc4398c-0604-4be1-b081-b4a25a94afff","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"Etc/GMT-9\",\n  \"dependencies\": {\n  },\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\"\n}"},{"id":"50ca10e3-0fd5-49bd-a944-135d08f5e3ed","name":"hook","type":"server_js","source":"function hook() {\n const threads \u003d GmailApp.search(\u0027label:unread\u0027);  // 未読のスレッドを取得\n\n if (threads.length \u003d\u003d 0) {\n   Logger.log(\u0027新規メッセージなし\u0027);\n   return\n }\n\n threads.forEach(function (thread) {\n   const messages \u003d thread.getMessages();\n\n   const payloads \u003d messages.map(function (message) {\n     message.markRead();  // メールを既読に設定する\n\n     const from \u003d message.getFrom();\n     const subject \u003d message.getSubject();\n     const plainBody \u003d message.getPlainBody();\n\n     const webhook \u003d getWebhookUrl();\n\n     Logger.log(subject);\n     const payload \u003d {\n       content: subject,\n       embeds: [{\n         title: subject,\n         author: {\n           name: from,\n         },\n         description: plainBody.substr(0, 2048),\n       }],\n     }\n     return {\n       url: webhook,\n       contentType: \u0027application/json\u0027,\n       payload: JSON.stringify(payload),\n     }\n   })\n\n   Logger.log(payloads);\n   UrlFetchApp.fetchAll(payloads);\n })\n}\n\n\nfunction getWebhookUrl() {\n const spreadsheet \u003d SpreadsheetApp.getActiveSpreadsheet();\n const sheet \u003d spreadsheet.getActiveSheet();\n\n return sheet.getRange(1, 1).getValue();\n}"}]}